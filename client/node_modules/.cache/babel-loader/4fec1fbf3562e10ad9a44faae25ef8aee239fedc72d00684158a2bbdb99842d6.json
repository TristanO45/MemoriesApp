{"ast":null,"code":"const postsReducer = function () {\n  let posts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case \"FETCH_ALL\":\n      return posts.map;\n    case \"FETCH_ALL\":\n      return action.payload;\n    // Assuming the action payload contains the fetched posts\n    case \"CREATE\":\n      return [...posts, action.payload];\n    // Assuming the action payload contains the new post\n    default:\n      return posts;\n  }\n};\nexport default postsReducer;","map":{"version":3,"names":["postsReducer","posts","arguments","length","undefined","action","type","map","payload"],"sources":["/Users/tristamon/Coding/MemoriesApp/client/src/reducers/posts.js"],"sourcesContent":["const postsReducer = (posts = [], action) => {\n  switch (action.type) {\n    case \"FETCH_ALL\":\n      return posts.map\n    case \"FETCH_ALL\":\n      return action.payload; // Assuming the action payload contains the fetched posts\n    case \"CREATE\":\n      return [...posts, action.payload]; // Assuming the action payload contains the new post\n    default:\n      return posts;\n  }\n};\n\nexport default postsReducer;\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtC,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAOL,KAAK,CAACM,GAAG;IAClB,KAAK,WAAW;MACd,OAAOF,MAAM,CAACG,OAAO;IAAE;IACzB,KAAK,QAAQ;MACX,OAAO,CAAC,GAAGP,KAAK,EAAEI,MAAM,CAACG,OAAO,CAAC;IAAE;IACrC;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}